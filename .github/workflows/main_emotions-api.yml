name: Pipeline CI/CD para Azure App Service (Java/Maven)

on:
  # O pipeline roda em todo push no branch 'main'
  push:
    branches:
      - main
  # Permite rodar o pipeline manualmente através da interface do GitHub
  workflow_dispatch:

# Define as variáveis de ambiente necessárias
env:
  JAVA_VERSION: '21' # Versão configurada para Java 21.
  ARTIFACT_NAME: deployable-app
  # Substitua pelos nomes reais dos seus App Services no Azure
  AZURE_WEBAPP_STAGING_NAME: 'emotions-api-staging-app' 
  AZURE_WEBAPP_PRODUCTION_NAME: 'emotions-api-prod-app' 

jobs:
  ########################################
  # JOB 1: INTEGRAÇÃO CONTÍNUA (Build & Testes em Java/Maven)
  ########################################
  ci:
    name: Build & Testes (Java/Maven)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      - name: Configurar Java e Maven
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          # Configura o cache do Maven para acelerar builds futuras
          cache: 'maven' 

      - name: Executar Build e Testes Automatizados com Maven
        # Este comando compila, executa os testes existentes e empacota o JAR/WAR.
        run: mvn clean install -DskipTests=false

      - name: Empacotar e Enviar Artifact (.jar ou .war)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          # O artefato final é um arquivo JAR (ou WAR) na pasta target/
          path: target/*.jar
          retention-days: 1

  ########################################
  # JOB 2: DEPLOY EM STAGING (Homologação)
  ########################################
  deploy_staging:
    name: Deploy em Homologação (Staging)
    needs: [ci]
    runs-on: ubuntu-latest
    # Define o ambiente 'staging' (Crie este Ambiente no GitHub)
    environment: staging
    
    steps:
      - name: Baixar Artifact Compilado
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./.deploy/app

      - name: Deploy no Azure App Service (Staging)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_STAGING_NAME }} 
          # Secret de publicação (gerado via Azure Portal ou manualmente)
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_STAGING }} 
          package: ./.deploy/app/*.jar 

  ########################################
  # JOB 3: DEPLOY EM PRODUÇÃO
  ########################################
  deploy_production:
    name: Deploy em Produção
    # Depende que o deploy de staging tenha sido um sucesso
    needs: [deploy_staging] 
    runs-on: ubuntu-latest
    # Define o ambiente 'production' (Configure APROVAÇÃO MANUAL no GitHub para este ambiente)
    environment: production 
    
    steps:
      - name: Baixar Artifact Compilado
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./.deploy/app

      - name: Deploy no Azure App Service (Produção)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_PRODUCTION_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_PRODUCTION }}
          package: ./.deploy/app/*.jar
